{"ast":null,"code":"import itemsForm from \"@/views/item/ components/ItemsForm\";\nexport default {\n  name: \"ItemsMgtView\",\n  components: {\n    itemsForm\n  },\n  data() {\n    return {\n      dataList: [],\n      addDialogVisible: false,\n      editDialogVisible: false,\n      pagination: {\n        page: 1,\n        size: 20,\n        total: 0\n      },\n      addForm: {\n        item_name: ''\n      },\n      addRules: {\n        item_name: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 16,\n          message: '长度在 1 到 16 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    resetForm(name) {\n      this.$refs[name].resetForm();\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.getList();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.getList();\n    },\n    async getList(page) {\n      if (page) {\n        this.pagination.page = page;\n      }\n      const {\n        data: response\n      } = await this.$http.get('items/item_mgt/', {\n        params: {\n          'page': this.pagination.page,\n          'size': this.pagination.size,\n          'search': this.search\n        }\n      });\n      if (response.code) {\n        return this.$message.error(response.message);\n      }\n      this.dataList = response.results;\n      this.pagination = response.pagination;\n    },\n    async postAdd() {\n      // this.$refs['add'].validate(async (valid) => {\n      //   if (valid) {\n      //     const {data: response} = await this.$http.post('items/item_mgt/', this.addForm)\n      //     if (response.code) {\n      //       return this.$message.error(response.message)\n      //     }\n      //     this.addDialogVisible = false\n      //     await this.getList()\n      //   }\n      // })\n      let valid = this.$refs['add'].submitForm();\n      if (valid) {\n        let formData = this.$refs['add'].addForm;\n        const {\n          data: response\n        } = await this.$http.post('items/item_mgt/', formData);\n        if (response.code) {\n          return this.$message.error(response.message);\n        }\n        this.addDialogVisible = false;\n        await this.getList();\n      }\n    },\n    handleEdit(row) {\n      this.editForm = row;\n      this.editDialogVisible = true;\n    },\n    async edit() {\n      let valid = this.$refs['edit'].submitForm();\n      if (valid) {\n        let formData = this.$refs['add'].addForm;\n        const {\n          data: response\n        } = await this.$http.patch('items/item_mgt/', formData);\n        if (response.code) {\n          return this.$message.error(response.message);\n        }\n        this.addDialogVisible = false;\n        await this.getList();\n      }\n    },\n    handleDel() {}\n  }\n};","map":{"version":3,"mappings":"AA2DA;AACA;EACAA;EACAC;IAAAC;EAAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QAAAC;QAAAC;QAAAC;MAAA;MACAC;QAAAC;MAAA;MACAC;QACAD,YACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;IACA;EACA;EACAG;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;QACA;MACA;MACA;QAAApB;MAAA,4CACA;QAAAqB;UAAA;UAAA;UAAA;QAAA;MAAA;MACA;QACA;MACA;MACA;MACA;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA;QACA;UAAArB;QAAA;QACA;UACA;QACA;QACA;QACA;MACA;IACA;IACAsB;MACA;MACA;IACA;IACA;MACA;MACA;QACA;QACA;UAAAtB;QAAA;QACA;UACA;QACA;QACA;QACA;MACA;IACA;IACAuB,aAEA;EACA;AACA","names":["name","components","itemsForm","data","dataList","addDialogVisible","editDialogVisible","pagination","page","size","total","addForm","item_name","addRules","required","message","trigger","min","max","created","methods","resetForm","handleCurrentChange","handleSizeChange","params","handleEdit","handleDel"],"sourceRoot":"src/views/item","sources":["ItemsMgtView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>项目组</el-breadcrumb-item>\n      <el-breadcrumb-item>项目列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n\n        </el-col>\n        <el-col :span=\"12\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">增加项目</el-button>\n        </el-col>\n      </el-row>\n      <el-table border style=\"width: 100%\" :data=\"dataList\">\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column prop=\"item_name\" label=\"项目名\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template #default=\"{ row }\">\n            <el-button v-if=\"row.id !== 1\" @click=\"handleEdit(row)\" type=\"success\" icon=\"el-icon-edit\" size=\"mini\">\n            </el-button>\n            <el-button v-if=\"row.id !== 1\" @click=\"handleDel(row.id)\" type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.page\"\n          :page-sizes=\"[20, 50, 100]\"\n          :page-size=\"pagination.size\"\n          layout=\"total, prev, pager, next, jumper, sizes\"\n          :total=\"pagination.total\"\n      >\n      </el-pagination>\n    </el-card>\n    <!-- 添加项目 -->\n    <el-dialog title=\"增加项目\" :visible.sync=\"addDialogVisible\" @close=\"resetForm('add')\">\n      <itemsForm ref=\"add\"></itemsForm>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"postAdd\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改项目 -->\n    <el-dialog title=\"修改\" :visible.sync=\"editDialogVisible\" @close=\"resetForm('edit')\">\n      <itemsForm ref=\"edit\"></itemsForm>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"edit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport itemsForm from \"@/views/item/ components/ItemsForm\";\nexport default {\n  name: \"ItemsMgtView\",\n  components: { itemsForm },\n  data() {\n    return {\n      dataList: [],\n      addDialogVisible: false,\n      editDialogVisible: false,\n      pagination: {page: 1, size: 20, total: 0},\n      addForm: {item_name: ''},\n      addRules: {\n        item_name: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {min: 1, max: 16, message: '长度在 1 到 16 个字符', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    resetForm(name) {\n      this.$refs[name].resetForm()\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val\n      this.getList()\n    },\n    async getList(page) {\n      if (page) {\n        this.pagination.page = page\n      }\n      const {data: response} = await this.$http.get('items/item_mgt/',\n          {params: {'page': this.pagination.page, 'size': this.pagination.size, 'search': this.search}})\n      if (response.code) {\n        return this.$message.error(response.message)\n      }\n      this.dataList = response.results\n      this.pagination = response.pagination\n    },\n    async postAdd() {\n      // this.$refs['add'].validate(async (valid) => {\n      //   if (valid) {\n      //     const {data: response} = await this.$http.post('items/item_mgt/', this.addForm)\n      //     if (response.code) {\n      //       return this.$message.error(response.message)\n      //     }\n      //     this.addDialogVisible = false\n      //     await this.getList()\n      //   }\n      // })\n      let valid = this.$refs['add'].submitForm()\n      if (valid) {\n        let formData = this.$refs['add'].addForm\n        const {data: response} = await this.$http.post('items/item_mgt/', formData)\n        if (response.code) {\n            return this.$message.error(response.message)\n          }\n          this.addDialogVisible = false\n          await this.getList()\n      }\n    },\n    handleEdit(row) {\n      this.editForm = row\n      this.editDialogVisible = true\n    },\n    async edit() {\n      let valid = this.$refs['edit'].submitForm()\n      if (valid) {\n        let formData = this.$refs['add'].addForm\n        const {data: response} = await this.$http.patch('items/item_mgt/', formData)\n        if (response.code) {\n            return this.$message.error(response.message)\n          }\n          this.addDialogVisible = false\n          await this.getList()\n      }\n    },\n    handleDel() {\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}