{"ast":null,"code":"export default {\n  name: \"LoginView.vue\",\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 16,\n          message: '长度在 6 到 16 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields(); // Form的resetFields方法重置\n    },\n\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (valid) {\n          const res = await this.$http.post('login/', this.loginForm); // post 返回一个Promise\n          console.log(res); // status状态码，data返回的数据\n          const {\n            data: response\n          } = res; // data解构出来\n          // 返回的对象\n          console.log(response);\n          console.log(response.code);\n          if (!response.code) {\n            // 如果返回的对象没有code属性或不为0，说明成功了\n            console.log('登录成功');\n          } else {\n            console.log('登录失败');\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgCA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;IACA;EACA;EACAG;IACAC;MACA;IACA;;IACAC;MACA;QACA;UACA;UACAC;UACA;YAAAb;UAAA;UACA;UACAa;UACAA;UACA;YACA;YACAA;UACA;YACAA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","loginForm","username","password","loginRules","required","message","trigger","min","max","methods","resetLoginForm","login","console"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <div class=\"avatar_box\">\n        <img src=\"../assets/img/logo.png\" alt=\"logo\"  />\n      </div>\n      <el-form class=\"login_form\" :rules=\"loginRules\" :model=\"loginForm\" ref=\"loginFormRef\">\n        <el-form-item>\n          <el-input\n              v-model=\"loginForm.username\"\n              placeholder=\"请输入用户名\"\n              prefix-icon=\"el-icon-user\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-input\n            type=\"password\"\n              v-model=\"loginForm.password\"\n            placeholder=\"请输入密码\"\n            prefix-icon=\"el-icon-s-custom\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\">登录</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重制</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"LoginView.vue\",\n  data () {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n     },\n      loginRules: {\n        username: [\n         { required: true, message: '请输入用户名', trigger: 'blur' },\n         { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\n       ],\n        password: [\n         { required: true, message: '请输入密码', trigger: 'blur' },\n         { min: 6, max: 16, message: '长度在 6 到 16 个字符', trigger: 'blur' }\n       ]\n     }\n   }\n },\n  methods: {\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields() // Form的resetFields方法重置\n   },\n    login() {\n      this.$refs.loginFormRef.validate(async (valid) => {\n        if (valid) {\n          const res = await this.$http.post('login/', this.loginForm) // post 返回一个Promise\n          console.log(res) // status状态码，data返回的数据\n          const { data: response } = res // data解构出来\n          // 返回的对象\n          console.log(response)\n          console.log(response.code)\n          if (!response.code) {\n            // 如果返回的对象没有code属性或不为0，说明成功了\n            console.log('登录成功')\n         } else {\n            console.log('登录失败')\n         }\n        }\n     })\n   }\n }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  background-color: #2b4b6b;\n  height: 100%;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 5px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n   .avatar_box {\n    height: 130px;\n    width: 130px;\n    padding: 10px;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 35%;\n    }\n   }\n  .login_form {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    padding: 0 20px;\n    box-sizing: border-box;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}