{"ast":null,"code":"export default {\n  name: \"ItemsMgtView\",\n  data() {\n    return {\n      dataList: [],\n      addDialogVisible: false,\n      pagination: {\n        page: 1,\n        size: 20,\n        total: 0\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.getList();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.getList();\n    },\n    async getList(page) {\n      if (page) {\n        this.pagination.page = page;\n      }\n      const {\n        data: response\n      } = await this.$http.get('items/item_mgt/', {\n        params: {\n          'page': this.pagination.page,\n          'size': this.pagination.size,\n          'search': this.search\n        }\n      });\n      if (response.code) {\n        return this.$message.error(response.message);\n      }\n      this.dataList = response.results;\n      this.pagination = response.pagination;\n    }\n  }\n};","map":{"version":3,"mappings":"AAmCA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;QAAAC;QAAAC;QAAAC;MAAA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;QACA;MACA;MACA;QAAAV;MAAA,4CACA;QAAAW;UAAA;UAAA;UAAA;QAAA;MAAA;MACA;QACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","data","dataList","addDialogVisible","pagination","page","size","total","created","methods","handleCurrentChange","handleSizeChange","params"],"sourceRoot":"src/views/item","sources":["ItemsMgtView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>项目组</el-breadcrumb-item>\n      <el-breadcrumb-item>项目列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n\n        </el-col>\n        <el-col :span=\"12\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">增加项目</el-button>\n        </el-col>\n      </el-row>\n      <el-table border style=\"width: 100%\" :data=\"dataList\">\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column prop=\"item_name\" label=\"项目名\"></el-table-column>\n      </el-table>\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.page\"\n          :page-sizes=\"[20, 50, 100]\"\n          :page-size=\"pagination.size\"\n          layout=\"total, prev, pager, next, jumper, sizes\"\n          :total=\"pagination.total\"\n      >\n      </el-pagination>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ItemsMgtView\",\n  data() {\n    return {\n      dataList: [],\n      addDialogVisible: false,\n      pagination: {page: 1, size: 20, total: 0},\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    handleCurrentChange(val) {\n      this.pagination.page = val\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val\n      this.getList()\n    },\n    async getList(page) {\n      if (page) {\n        this.pagination.page = page\n      }\n      const {data: response} = await this.$http.get('items/item_mgt/',\n          {params: {'page': this.pagination.page, 'size': this.pagination.size, 'search': this.search}})\n      if (response.code) {\n        return this.$message.error(response.message)\n      }\n      this.dataList = response.results\n      this.pagination = response.pagination\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}