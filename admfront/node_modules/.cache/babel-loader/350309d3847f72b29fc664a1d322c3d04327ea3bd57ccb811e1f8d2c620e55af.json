{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport './plugins/element.js';\nimport './assets/css/main.css';\nimport axios from 'axios';\n\n// 全局请求拦截器，只要发起异步请求都要带上这个token\naxios.interceptors.request.use(config => {\n  config.headers.Authorization = 'Bearer ' + window.localStorage.getItem('token');\n  return config;\n});\n// 响应拦截器，只要有错误码小于100都和登录有关，要求重新登录\naxios.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  if (response.data.code && response.data.code < 100) {\n    window.localStorage.removeItem('token');\n    router.push('/login');\n    return this.$message.error(response.message);\n    // 不返回response\n  } else {\n    return response;\n  }\n});\n// axios全局设置，baseURL指向后台服务\naxios.defaults.baseURL = '/api/v1/';\n// 为Vue类增加全局属性$http，这样所有组件实例都可以使用该属性了\nVue.prototype.$http = axios;\nVue.config.productionTip = false;\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","axios","interceptors","request","use","config","headers","Authorization","window","localStorage","getItem","response","data","code","removeItem","push","$message","error","message","defaults","baseURL","prototype","$http","productionTip","render","h","$mount"],"sources":["/Users/adm119/VueProjects/admfront/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport './plugins/element.js'\nimport './assets/css/main.css'\nimport axios from 'axios'\n\n// 全局请求拦截器，只要发起异步请求都要带上这个token\naxios.interceptors.request.use(config => {\n    config.headers.Authorization = 'Bearer ' +\n        window.localStorage.getItem('token')\n    return config\n})\n// 响应拦截器，只要有错误码小于100都和登录有关，要求重新登录\naxios.interceptors.response.use(function (response) {\n    // 对响应数据做点什么\n    if (response.data.code && response.data.code < 100) {\n        window.localStorage.removeItem('token')\n        router.push('/login')\n        return this.$message.error(response.message)\n        // 不返回response\n    } else {\n        return response\n    }\n})\n// axios全局设置，baseURL指向后台服务\naxios.defaults.baseURL = '/api/v1/'\n// 为Vue类增加全局属性$http，这样所有组件实例都可以使用该属性了\nVue.prototype.$http = axios\nVue.config.productionTip = false\n\nnew Vue({\n    router,\n    render: h => h(App)\n}).$mount('#app')\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,sBAAsB;AAC7B,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,SAAS,GACpCC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC,OAAOL,MAAM;AACjB,CAAC,CAAC;AACF;AACAJ,KAAK,CAACC,YAAY,CAACS,QAAQ,CAACP,GAAG,CAAC,UAAUO,QAAQ,EAAE;EAChD;EACA,IAAIA,QAAQ,CAACC,IAAI,CAACC,IAAI,IAAIF,QAAQ,CAACC,IAAI,CAACC,IAAI,GAAG,GAAG,EAAE;IAChDL,MAAM,CAACC,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IACvCd,MAAM,CAACe,IAAI,CAAC,QAAQ,CAAC;IACrB,OAAO,IAAI,CAACC,QAAQ,CAACC,KAAK,CAACN,QAAQ,CAACO,OAAO,CAAC;IAC5C;EACJ,CAAC,MAAM;IACH,OAAOP,QAAQ;EACnB;AACJ,CAAC,CAAC;AACF;AACAV,KAAK,CAACkB,QAAQ,CAACC,OAAO,GAAG,UAAU;AACnC;AACAtB,GAAG,CAACuB,SAAS,CAACC,KAAK,GAAGrB,KAAK;AAC3BH,GAAG,CAACO,MAAM,CAACkB,aAAa,GAAG,KAAK;AAEhC,IAAIzB,GAAG,CAAC;EACJE,MAAM;EACNwB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC1B,GAAG;AACtB,CAAC,CAAC,CAAC2B,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}