{"ast":null,"code":"export default {\n  name: \"UserView\",\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value !== this.addForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      search: '',\n      addDialogVisible: false,\n      addForm: {\n        username: '',\n        password: '',\n        checkPass: '',\n        phone: '',\n        email: ''\n      },\n      dataList: [],\n      pagination: {\n        page: 1,\n        size: 20,\n        total: 0\n      },\n      addRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 16,\n          message: '长度在 4 到 16 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 16,\n          message: '长度在 4 到 16 个字符',\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          message: '请再次输入确认密码',\n          trigger: 'blur'\n        }, {\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    resetForm() {\n      this.$refs[\"add\"].resetFields();\n    },\n    async getList(page) {\n      if (!page) {\n        page = 1;\n      }\n      const {\n        data: response\n      } = await this.$http.get('users/');\n      if (response.code) {\n        return this.$message.error(response.message);\n      }\n      this.dataList = response;\n      console.log(response);\n    },\n    postAdd() {\n      this.$refs[\"add\"].validate(async valid => {\n        if (valid) {\n          console.log(this.addForm);\n          const {\n            data: response\n          } = await this.$http.post('users/', this.addForm);\n          console.log(response);\n          if (response.code) {\n            return this.$message.error(response.message);\n          }\n          this.addDialogVisible = false;\n          await this.getList();\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgEA;EACAA;EACAC;IACA;MACA;QACAC;MACA;QACAA;MACA;IACA;IACA;MACAC;MACAC;MACAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;MACAC;MACAC;QAAAC;QAAAC;QAAAC;MAAA;MACAC;QACAV,WACA;UAAAW;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAZ,WACA;UAAAU;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAX,YACA;UAAAS;UAAAC;UAAAC;QAAA,GACA;UAAAG;UAAAH;QAAA;MAEA;IACA;EACA;EACAI;IACA;EACA;EACAC;IACAC;MACA;IACA;IACA;MACA;QACAZ;MACA;MACA;QAAAZ;MAAA;MACA;QACA;MACA;MACA;MACAyB;IAEA;IACAC;MACA;QACA;UACAD;UACA;YAAAzB;UAAA;UACAyB;UACA;YACA;UACA;UACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","callback","search","addDialogVisible","addForm","username","password","checkPass","phone","email","dataList","pagination","page","size","total","addRules","required","message","trigger","min","max","validator","created","methods","resetForm","console","postAdd"],"sourceRoot":"src/views/user","sources":["UserView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-input placeholder=\"请输入内容\" v-model=\"search\">\n            <el-button slot=\"append\" icon=\"el-icon-search\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">增加用户</el-button>\n        </el-col>\n      </el-row>\n      <el-table border style=\"width: 100%\" :data=\"dataList\">\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column prop=\"username\" label=\"登录名\"></el-table-column>\n        <el-table-column prop=\"is_active\" label=\"激活\"></el-table-column>\n        <el-table-column prop=\"is_superuser\" label=\"管理员\">\n          <template slot-scope=\"scope\">{{ scope.row.is_superuser ? '是' : '否' }}</template>\n        </el-table-column>\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n      </el-table>\n      <el-pagination\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"pagination.page\"\n        :page-size=\"pagination.size\"\n        layout=\"total, prev, pager, next, jumper\"\n        :total=\"pagination.total\"\n      >\n      </el-pagination>\n    </el-card>\n    <!-- 添加用户 -->\n    <el-dialog title=\"增加用户\" :visible.sync=\"addDialogVisible\" @close=\"resetForm\">\n      <el-form :model=\"addForm\" :rules=\"addRules\" ref=\"add\" labelwidth=\"100px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\n          <el-input type=\"password\" v-model=\"addForm.checkPass\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"addForm.phone\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"postAdd\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserView\",\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value !== this.addForm.password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    };\n    return {\n      search: '',\n      addDialogVisible: false,\n      addForm: {username: '', password: '', checkPass: '', phone: '', email: ''},\n      dataList: [],\n      pagination: { page: 1, size: 20, total: 0 },\n      addRules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {min: 3, max: 16, message: '长度在 4 到 16 个字符', trigger: 'blur'}\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'},\n          {min: 6, max: 16, message: '长度在 4 到 16 个字符', trigger: 'blur'}\n        ],\n        checkPass: [\n          {required: true, message: '请再次输入确认密码', trigger: 'blur'},\n          {validator: validatePass, trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    resetForm() {\n      this.$refs[\"add\"].resetFields()\n    },\n    async getList(page) {\n      if (!page) {\n        page = 1\n     }\n      const {data: response} = await this.$http.get('users/')\n      if (response.code) {\n        return this.$message.error(response.message)\n      }\n      this.dataList = response\n      console.log(response)\n\n    },\n    postAdd() {\n      this.$refs[\"add\"].validate(async (valid) => {\n        if (valid) {\n          console.log(this.addForm)\n          const {data: response} = await this.$http.post('users/', this.addForm)\n          console.log(response)\n          if (response.code) {\n            return this.$message.error(response.message)\n          }\n          this.addDialogVisible = false\n          await this.getList()\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}