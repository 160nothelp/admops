{"ast":null,"code":"export default {\n  name: \"RoleView.vue\",\n  data() {\n    return {\n      search: '',\n      dataList: [],\n      addDialogVisible: false,\n      editDialogVisible: false,\n      pagination: {\n        page: 1,\n        size: 20,\n        total: 0\n      },\n      addRules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 16,\n          message: '长度在 1 到 16 个字符',\n          trigger: 'blur'\n        }]\n      },\n      addForm: {},\n      editForm: {}\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    resetForm(name) {\n      this.$refs[name].resetFields();\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val;\n      this.getList();\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val;\n      this.getList();\n    },\n    async getList(page) {\n      if (page) {\n        this.pagination.page = page;\n      }\n      const {\n        data: response\n      } = await this.$http.get('users/roles/', {\n        params: {\n          'page': this.pagination.page,\n          'size': this.pagination.size,\n          'search': this.search\n        }\n      });\n      if (response.code) {\n        return this.$message.error(response.message);\n      }\n      this.dataList = response.results;\n      this.pagination = response.pagination;\n    },\n    add() {\n      this.$refs[\"add\"].validate(async valid => {\n        if (valid) {\n          const {\n            data: response\n          } = await this.$http.post('users/roles/', this.addForm);\n          if (response.code) {\n            return this.$message.error(response.message);\n          }\n          this.addDialogVisible = false;\n          await this.getList();\n        }\n      });\n    },\n    handleDel(id) {\n      this.$msgbox.confirm('删除该角色, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'danger'\n      }).then(async () => {\n        const {\n          data: response\n        } = await this.$http.delete(`users/roles/${id}/`);\n        if (response.code) {\n          return this.$message.error(response.message);\n        }\n        await this.getList();\n      });\n    },\n    handleEdit(row) {\n      this.editForm = row;\n      this.editDialogVisible = true;\n    },\n    edit() {\n      const {\n        id\n      } = this.editForm;\n      this.$refs[\"edit\"].validate(async valid => {\n        if (valid) {\n          const {\n            data: response\n          } = await this.$http.patch(`users/roles/${id}/`, this.editForm);\n          if (response.code) {\n            return this.$message.error(response.message);\n          }\n          this.editDialogVisible = false;\n          await this.getList();\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAoEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QAAAC;QAAAC;QAAAC;MAAA;MACAC;QACAV,OACA;UAAAW;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;MACAG;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;QACA;MACA;MACA;QAAArB;MAAA,yCACA;QAAAsB;UAAA;UAAA;UAAA;QAAA;MAAA;MACA;QACA;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;UACA;YAAAvB;UAAA;UACA;YACA;UACA;UACA;UACA;QACA;MACA;IACA;IACAwB;MACA;QACAC;QACAC;QACAC;MACA;QACA;UAAA3B;QAAA;QACA;UACA;QACA;QACA;MACA;IACA;IACA4B;MACA;MACA;IACA;IACAC;MACA;QAAAC;MAAA;MACA;QACA;UACA;YAAA9B;UAAA;UACA;YACA;UACA;UACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","search","dataList","addDialogVisible","editDialogVisible","pagination","page","size","total","addRules","required","message","trigger","min","max","addForm","editForm","created","methods","resetForm","handleCurrentChange","handleSizeChange","params","add","handleDel","confirmButtonText","cancelButtonText","type","handleEdit","edit","id"],"sourceRoot":"src/views/user","sources":["RoleView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card class=\"box-card\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-input placeholder=\"请输入内容\" v-model=\"search\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getList(1)\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">增加角色</el-button>\n        </el-col>\n      </el-row>\n      <el-table :data=\"dataList\" border style=\"width: 100%\">\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"id\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template #default=\"{ row }\">\n            <el-button type=\"success\" icon=\"el-icon-edit\" size=\"mini\" @click=\"handleEdit(row)\"></el-button>\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"handleDel(row.id)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pagination.page\"\n          :page-sizes=\"[20, 50, 100]\"\n          :page-size=\"pagination.size\"\n          layout=\"total, prev, pager, next, jumper, sizes\"\n          :total=\"pagination.total\"\n      >\n      </el-pagination>\n    </el-card>\n    <!-- 增加 -->\n    <el-dialog title=\"增加\" :visible.sync=\"addDialogVisible\" @close=\"resetForm('add')\">\n      <el-form :model=\"addForm\" :rules=\"addRules\" ref=\"add\" labelwidth=\"100px\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"addForm.name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"add\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改 -->\n    <el-dialog title=\"增加\" :visible.sync=\"editDialogVisible\" @close=\"resetForm('edit')\">\n      <el-form :model=\"editForm\" :rules=\"addRules\" ref=\"edit\" labelwidth=\"100px\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"editForm.name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"edit\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RoleView.vue\",\n  data() {\n    return {\n      search: '',\n      dataList: [],\n      addDialogVisible: false,\n      editDialogVisible: false,\n      pagination: {page: 1, size: 20, total: 0},\n      addRules: {\n        name: [\n          {required: true, message: '请输入名称', trigger: 'blur'},\n          {min: 1, max: 16, message: '长度在 1 到 16 个字符', trigger: 'blur'},\n        ],\n      },\n      addForm: {},\n      editForm: {},\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    resetForm(name) {\n      this.$refs[name].resetFields()\n    },\n    handleCurrentChange(val) {\n      this.pagination.page = val\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.pagination.size = val\n      this.getList()\n    },\n    async getList(page) {\n      if (page) {\n        this.pagination.page = page\n      }\n      const {data: response} = await this.$http.get('users/roles/',\n          {params: {'page': this.pagination.page, 'size': this.pagination.size, 'search': this.search}})\n      if (response.code) {\n        return this.$message.error(response.message)\n      }\n      this.dataList = response.results\n      this.pagination = response.pagination\n    },\n    add() {\n      this.$refs[\"add\"].validate(async (valid) => {\n        if (valid) {\n          const {data: response} = await this.$http.post('users/roles/', this.addForm)\n          if (response.code) {\n            return this.$message.error(response.message)\n          }\n          this.addDialogVisible = false\n          await this.getList()\n        }\n      })\n    },\n    handleDel(id) {\n      this.$msgbox.confirm('删除该角色, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'danger'\n      }).then(async () => {\n        const {data: response} = await this.$http.delete(`users/roles/${id}/`)\n        if (response.code) {\n          return this.$message.error(response.message)\n        }\n        await this.getList()\n      })\n    },\n    handleEdit(row) {\n      this.editForm = row\n      this.editDialogVisible = true\n    },\n    edit(){\n      const {id} = this.editForm\n      this.$refs[\"edit\"].validate(async (valid) => {\n        if (valid) {\n          const {data: response} = await this.$http.patch(`users/roles/${id}/`, this.editForm)\n          if (response.code) {\n            return this.$message.error(response.message)\n          }\n          this.editDialogVisible = false\n          await this.getList()\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}